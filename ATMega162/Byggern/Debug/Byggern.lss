
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000516  000005aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000516  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800114  00800114  000005be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  0000062c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000898  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000777  00000000  00000000  00000f24  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ca  00000000  00000000  0000169b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001a68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d1  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a7  00000000  00000000  00001ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001f74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e1       	ldi	r30, 0x16	; 22
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 31       	cpi	r26, 0x14	; 20
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 e1       	ldi	r26, 0x14	; 20
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ae 31       	cpi	r26, 0x1E	; 30
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 89 02 	jmp	0x512	; 0x512 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "util/delay.h"
#include "uart.h"
#include <stdio.h>

int main(void) {
	uart_init(9600);
  ae:	80 e8       	ldi	r24, 0x80	; 128
  b0:	95 e2       	ldi	r25, 0x25	; 37
  b2:	0e 94 6f 00 	call	0xde	; 0xde <uart_init>
	fdevopen(&uart_send_char, &uart_receive);
  b6:	65 e8       	ldi	r22, 0x85	; 133
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	81 e8       	ldi	r24, 0x81	; 129
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 ca 00 	call	0x194	; 0x194 <fdevopen>
	
    while (1) {
		printf("Hello world!\r\n");
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	0e 94 15 01 	call	0x22a	; 0x22a <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	8f e7       	ldi	r24, 0x7F	; 127
  ce:	97 e0       	ldi	r25, 0x07	; 7
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x22>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x2c>
  da:	00 00       	nop
  dc:	f2 cf       	rjmp	.-28     	; 0xc2 <main+0x14>

000000de <uart_init>:
#include "uart.h"

#define FOSC 4915200

void uart_init(unsigned int baud_rate) {
	unsigned int ubrr = FOSC/16/baud_rate - 1;
  de:	9c 01       	movw	r18, r24
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	50 e0       	ldi	r21, 0x00	; 0
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	70 eb       	ldi	r23, 0xB0	; 176
  e8:	84 e0       	ldi	r24, 0x04	; 4
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 89 00 	call	0x112	; 0x112 <__divmodsi4>
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	31 09       	sbc	r19, r1
	UBRR0H = (unsigned char) (ubrr >> 8);
  f4:	30 bd       	out	0x20, r19	; 32
	UBRR0L = (unsigned char) ubrr;
  f6:	29 b9       	out	0x09, r18	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  f8:	88 e1       	ldi	r24, 0x18	; 24
  fa:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8 data, 2 stop bit */
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
  fc:	8e e8       	ldi	r24, 0x8E	; 142
  fe:	80 bd       	out	0x20, r24	; 32
 100:	08 95       	ret

00000102 <uart_send_char>:
}

void uart_send_char(unsigned char data) {
	/* Wait for empty transmit buffer */
	while( !( UCSR0A & (1 << UDRE0)) );
 102:	5d 9b       	sbis	0x0b, 5	; 11
 104:	fe cf       	rjmp	.-4      	; 0x102 <uart_send_char>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 106:	8c b9       	out	0x0c, r24	; 12
 108:	08 95       	ret

0000010a <uart_receive>:
}

unsigned char uart_receive() {
	/* Wait for data to be received */
	while( !(UCSR0A & (1 << RXC0)) );
 10a:	5f 9b       	sbis	0x0b, 7	; 11
 10c:	fe cf       	rjmp	.-4      	; 0x10a <uart_receive>
	/* Get and return received data from buffer */
	return UDR0;
 10e:	8c b1       	in	r24, 0x0c	; 12
}
 110:	08 95       	ret

00000112 <__divmodsi4>:
 112:	05 2e       	mov	r0, r21
 114:	97 fb       	bst	r25, 7
 116:	1e f4       	brtc	.+6      	; 0x11e <__divmodsi4+0xc>
 118:	00 94       	com	r0
 11a:	0e 94 a0 00 	call	0x140	; 0x140 <__negsi2>
 11e:	57 fd       	sbrc	r21, 7
 120:	07 d0       	rcall	.+14     	; 0x130 <__divmodsi4_neg2>
 122:	0e 94 a8 00 	call	0x150	; 0x150 <__udivmodsi4>
 126:	07 fc       	sbrc	r0, 7
 128:	03 d0       	rcall	.+6      	; 0x130 <__divmodsi4_neg2>
 12a:	4e f4       	brtc	.+18     	; 0x13e <__divmodsi4_exit>
 12c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__negsi2>

00000130 <__divmodsi4_neg2>:
 130:	50 95       	com	r21
 132:	40 95       	com	r20
 134:	30 95       	com	r19
 136:	21 95       	neg	r18
 138:	3f 4f       	sbci	r19, 0xFF	; 255
 13a:	4f 4f       	sbci	r20, 0xFF	; 255
 13c:	5f 4f       	sbci	r21, 0xFF	; 255

0000013e <__divmodsi4_exit>:
 13e:	08 95       	ret

00000140 <__negsi2>:
 140:	90 95       	com	r25
 142:	80 95       	com	r24
 144:	70 95       	com	r23
 146:	61 95       	neg	r22
 148:	7f 4f       	sbci	r23, 0xFF	; 255
 14a:	8f 4f       	sbci	r24, 0xFF	; 255
 14c:	9f 4f       	sbci	r25, 0xFF	; 255
 14e:	08 95       	ret

00000150 <__udivmodsi4>:
 150:	a1 e2       	ldi	r26, 0x21	; 33
 152:	1a 2e       	mov	r1, r26
 154:	aa 1b       	sub	r26, r26
 156:	bb 1b       	sub	r27, r27
 158:	fd 01       	movw	r30, r26
 15a:	0d c0       	rjmp	.+26     	; 0x176 <__udivmodsi4_ep>

0000015c <__udivmodsi4_loop>:
 15c:	aa 1f       	adc	r26, r26
 15e:	bb 1f       	adc	r27, r27
 160:	ee 1f       	adc	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	a2 17       	cp	r26, r18
 166:	b3 07       	cpc	r27, r19
 168:	e4 07       	cpc	r30, r20
 16a:	f5 07       	cpc	r31, r21
 16c:	20 f0       	brcs	.+8      	; 0x176 <__udivmodsi4_ep>
 16e:	a2 1b       	sub	r26, r18
 170:	b3 0b       	sbc	r27, r19
 172:	e4 0b       	sbc	r30, r20
 174:	f5 0b       	sbc	r31, r21

00000176 <__udivmodsi4_ep>:
 176:	66 1f       	adc	r22, r22
 178:	77 1f       	adc	r23, r23
 17a:	88 1f       	adc	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	1a 94       	dec	r1
 180:	69 f7       	brne	.-38     	; 0x15c <__udivmodsi4_loop>
 182:	60 95       	com	r22
 184:	70 95       	com	r23
 186:	80 95       	com	r24
 188:	90 95       	com	r25
 18a:	9b 01       	movw	r18, r22
 18c:	ac 01       	movw	r20, r24
 18e:	bd 01       	movw	r22, r26
 190:	cf 01       	movw	r24, r30
 192:	08 95       	ret

00000194 <fdevopen>:
 194:	0f 93       	push	r16
 196:	1f 93       	push	r17
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	00 97       	sbiw	r24, 0x00	; 0
 19e:	31 f4       	brne	.+12     	; 0x1ac <fdevopen+0x18>
 1a0:	61 15       	cp	r22, r1
 1a2:	71 05       	cpc	r23, r1
 1a4:	19 f4       	brne	.+6      	; 0x1ac <fdevopen+0x18>
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	3a c0       	rjmp	.+116    	; 0x220 <fdevopen+0x8c>
 1ac:	8b 01       	movw	r16, r22
 1ae:	ec 01       	movw	r28, r24
 1b0:	6e e0       	ldi	r22, 0x0E	; 14
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 45 01 	call	0x28a	; 0x28a <calloc>
 1bc:	fc 01       	movw	r30, r24
 1be:	89 2b       	or	r24, r25
 1c0:	91 f3       	breq	.-28     	; 0x1a6 <fdevopen+0x12>
 1c2:	80 e8       	ldi	r24, 0x80	; 128
 1c4:	83 83       	std	Z+3, r24	; 0x03
 1c6:	01 15       	cp	r16, r1
 1c8:	11 05       	cpc	r17, r1
 1ca:	71 f0       	breq	.+28     	; 0x1e8 <fdevopen+0x54>
 1cc:	13 87       	std	Z+11, r17	; 0x0b
 1ce:	02 87       	std	Z+10, r16	; 0x0a
 1d0:	81 e8       	ldi	r24, 0x81	; 129
 1d2:	83 83       	std	Z+3, r24	; 0x03
 1d4:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 1d8:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 1dc:	89 2b       	or	r24, r25
 1de:	21 f4       	brne	.+8      	; 0x1e8 <fdevopen+0x54>
 1e0:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x1>
 1e4:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end>
 1e8:	20 97       	sbiw	r28, 0x00	; 0
 1ea:	c9 f0       	breq	.+50     	; 0x21e <fdevopen+0x8a>
 1ec:	d1 87       	std	Z+9, r29	; 0x09
 1ee:	c0 87       	std	Z+8, r28	; 0x08
 1f0:	83 81       	ldd	r24, Z+3	; 0x03
 1f2:	82 60       	ori	r24, 0x02	; 2
 1f4:	83 83       	std	Z+3, r24	; 0x03
 1f6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x2>
 1fa:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x3>
 1fe:	89 2b       	or	r24, r25
 200:	71 f4       	brne	.+28     	; 0x21e <fdevopen+0x8a>
 202:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__data_end+0x3>
 206:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__data_end+0x2>
 20a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end+0x4>
 20e:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x5>
 212:	89 2b       	or	r24, r25
 214:	21 f4       	brne	.+8      	; 0x21e <fdevopen+0x8a>
 216:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__data_end+0x5>
 21a:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__data_end+0x4>
 21e:	cf 01       	movw	r24, r30
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	1f 91       	pop	r17
 226:	0f 91       	pop	r16
 228:	08 95       	ret

0000022a <puts>:
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__data_end+0x2>
 236:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__data_end+0x3>
 23a:	23 81       	ldd	r18, Z+3	; 0x03
 23c:	21 ff       	sbrs	r18, 1
 23e:	1b c0       	rjmp	.+54     	; 0x276 <puts+0x4c>
 240:	8c 01       	movw	r16, r24
 242:	d0 e0       	ldi	r29, 0x00	; 0
 244:	c0 e0       	ldi	r28, 0x00	; 0
 246:	f8 01       	movw	r30, r16
 248:	81 91       	ld	r24, Z+
 24a:	8f 01       	movw	r16, r30
 24c:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end+0x2>
 250:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <__data_end+0x3>
 254:	db 01       	movw	r26, r22
 256:	18 96       	adiw	r26, 0x08	; 8
 258:	ed 91       	ld	r30, X+
 25a:	fc 91       	ld	r31, X
 25c:	19 97       	sbiw	r26, 0x09	; 9
 25e:	88 23       	and	r24, r24
 260:	31 f0       	breq	.+12     	; 0x26e <puts+0x44>
 262:	09 95       	icall
 264:	89 2b       	or	r24, r25
 266:	79 f3       	breq	.-34     	; 0x246 <puts+0x1c>
 268:	df ef       	ldi	r29, 0xFF	; 255
 26a:	cf ef       	ldi	r28, 0xFF	; 255
 26c:	ec cf       	rjmp	.-40     	; 0x246 <puts+0x1c>
 26e:	8a e0       	ldi	r24, 0x0A	; 10
 270:	09 95       	icall
 272:	89 2b       	or	r24, r25
 274:	19 f0       	breq	.+6      	; 0x27c <puts+0x52>
 276:	8f ef       	ldi	r24, 0xFF	; 255
 278:	9f ef       	ldi	r25, 0xFF	; 255
 27a:	02 c0       	rjmp	.+4      	; 0x280 <puts+0x56>
 27c:	8d 2f       	mov	r24, r29
 27e:	9c 2f       	mov	r25, r28
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	1f 91       	pop	r17
 286:	0f 91       	pop	r16
 288:	08 95       	ret

0000028a <calloc>:
 28a:	0f 93       	push	r16
 28c:	1f 93       	push	r17
 28e:	cf 93       	push	r28
 290:	df 93       	push	r29
 292:	86 9f       	mul	r24, r22
 294:	80 01       	movw	r16, r0
 296:	87 9f       	mul	r24, r23
 298:	10 0d       	add	r17, r0
 29a:	96 9f       	mul	r25, r22
 29c:	10 0d       	add	r17, r0
 29e:	11 24       	eor	r1, r1
 2a0:	c8 01       	movw	r24, r16
 2a2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <malloc>
 2a6:	ec 01       	movw	r28, r24
 2a8:	00 97       	sbiw	r24, 0x00	; 0
 2aa:	29 f0       	breq	.+10     	; 0x2b6 <calloc+0x2c>
 2ac:	a8 01       	movw	r20, r16
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	0e 94 82 02 	call	0x504	; 0x504 <memset>
 2b6:	ce 01       	movw	r24, r28
 2b8:	df 91       	pop	r29
 2ba:	cf 91       	pop	r28
 2bc:	1f 91       	pop	r17
 2be:	0f 91       	pop	r16
 2c0:	08 95       	ret

000002c2 <malloc>:
 2c2:	0f 93       	push	r16
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	82 30       	cpi	r24, 0x02	; 2
 2cc:	91 05       	cpc	r25, r1
 2ce:	10 f4       	brcc	.+4      	; 0x2d4 <malloc+0x12>
 2d0:	82 e0       	ldi	r24, 0x02	; 2
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <__flp>
 2d8:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <__flp+0x1>
 2dc:	20 e0       	ldi	r18, 0x00	; 0
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	a0 e0       	ldi	r26, 0x00	; 0
 2e2:	b0 e0       	ldi	r27, 0x00	; 0
 2e4:	30 97       	sbiw	r30, 0x00	; 0
 2e6:	19 f1       	breq	.+70     	; 0x32e <malloc+0x6c>
 2e8:	40 81       	ld	r20, Z
 2ea:	51 81       	ldd	r21, Z+1	; 0x01
 2ec:	02 81       	ldd	r16, Z+2	; 0x02
 2ee:	13 81       	ldd	r17, Z+3	; 0x03
 2f0:	48 17       	cp	r20, r24
 2f2:	59 07       	cpc	r21, r25
 2f4:	c8 f0       	brcs	.+50     	; 0x328 <malloc+0x66>
 2f6:	84 17       	cp	r24, r20
 2f8:	95 07       	cpc	r25, r21
 2fa:	69 f4       	brne	.+26     	; 0x316 <malloc+0x54>
 2fc:	10 97       	sbiw	r26, 0x00	; 0
 2fe:	31 f0       	breq	.+12     	; 0x30c <malloc+0x4a>
 300:	12 96       	adiw	r26, 0x02	; 2
 302:	0c 93       	st	X, r16
 304:	12 97       	sbiw	r26, 0x02	; 2
 306:	13 96       	adiw	r26, 0x03	; 3
 308:	1c 93       	st	X, r17
 30a:	27 c0       	rjmp	.+78     	; 0x35a <malloc+0x98>
 30c:	00 93 1c 01 	sts	0x011C, r16	; 0x80011c <__flp>
 310:	10 93 1d 01 	sts	0x011D, r17	; 0x80011d <__flp+0x1>
 314:	22 c0       	rjmp	.+68     	; 0x35a <malloc+0x98>
 316:	21 15       	cp	r18, r1
 318:	31 05       	cpc	r19, r1
 31a:	19 f0       	breq	.+6      	; 0x322 <malloc+0x60>
 31c:	42 17       	cp	r20, r18
 31e:	53 07       	cpc	r21, r19
 320:	18 f4       	brcc	.+6      	; 0x328 <malloc+0x66>
 322:	9a 01       	movw	r18, r20
 324:	bd 01       	movw	r22, r26
 326:	ef 01       	movw	r28, r30
 328:	df 01       	movw	r26, r30
 32a:	f8 01       	movw	r30, r16
 32c:	db cf       	rjmp	.-74     	; 0x2e4 <malloc+0x22>
 32e:	21 15       	cp	r18, r1
 330:	31 05       	cpc	r19, r1
 332:	f9 f0       	breq	.+62     	; 0x372 <malloc+0xb0>
 334:	28 1b       	sub	r18, r24
 336:	39 0b       	sbc	r19, r25
 338:	24 30       	cpi	r18, 0x04	; 4
 33a:	31 05       	cpc	r19, r1
 33c:	80 f4       	brcc	.+32     	; 0x35e <malloc+0x9c>
 33e:	8a 81       	ldd	r24, Y+2	; 0x02
 340:	9b 81       	ldd	r25, Y+3	; 0x03
 342:	61 15       	cp	r22, r1
 344:	71 05       	cpc	r23, r1
 346:	21 f0       	breq	.+8      	; 0x350 <malloc+0x8e>
 348:	fb 01       	movw	r30, r22
 34a:	93 83       	std	Z+3, r25	; 0x03
 34c:	82 83       	std	Z+2, r24	; 0x02
 34e:	04 c0       	rjmp	.+8      	; 0x358 <malloc+0x96>
 350:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__flp+0x1>
 354:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__flp>
 358:	fe 01       	movw	r30, r28
 35a:	32 96       	adiw	r30, 0x02	; 2
 35c:	44 c0       	rjmp	.+136    	; 0x3e6 <malloc+0x124>
 35e:	fe 01       	movw	r30, r28
 360:	e2 0f       	add	r30, r18
 362:	f3 1f       	adc	r31, r19
 364:	81 93       	st	Z+, r24
 366:	91 93       	st	Z+, r25
 368:	22 50       	subi	r18, 0x02	; 2
 36a:	31 09       	sbc	r19, r1
 36c:	39 83       	std	Y+1, r19	; 0x01
 36e:	28 83       	st	Y, r18
 370:	3a c0       	rjmp	.+116    	; 0x3e6 <malloc+0x124>
 372:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__brkval>
 376:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__brkval+0x1>
 37a:	23 2b       	or	r18, r19
 37c:	41 f4       	brne	.+16     	; 0x38e <malloc+0xcc>
 37e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 382:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 386:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <__brkval+0x1>
 38a:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__brkval>
 38e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 392:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 396:	21 15       	cp	r18, r1
 398:	31 05       	cpc	r19, r1
 39a:	41 f4       	brne	.+16     	; 0x3ac <malloc+0xea>
 39c:	2d b7       	in	r18, 0x3d	; 61
 39e:	3e b7       	in	r19, 0x3e	; 62
 3a0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 3a4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 3a8:	24 1b       	sub	r18, r20
 3aa:	35 0b       	sbc	r19, r21
 3ac:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__brkval>
 3b0:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__brkval+0x1>
 3b4:	e2 17       	cp	r30, r18
 3b6:	f3 07       	cpc	r31, r19
 3b8:	a0 f4       	brcc	.+40     	; 0x3e2 <malloc+0x120>
 3ba:	2e 1b       	sub	r18, r30
 3bc:	3f 0b       	sbc	r19, r31
 3be:	28 17       	cp	r18, r24
 3c0:	39 07       	cpc	r19, r25
 3c2:	78 f0       	brcs	.+30     	; 0x3e2 <malloc+0x120>
 3c4:	ac 01       	movw	r20, r24
 3c6:	4e 5f       	subi	r20, 0xFE	; 254
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	24 17       	cp	r18, r20
 3cc:	35 07       	cpc	r19, r21
 3ce:	48 f0       	brcs	.+18     	; 0x3e2 <malloc+0x120>
 3d0:	4e 0f       	add	r20, r30
 3d2:	5f 1f       	adc	r21, r31
 3d4:	50 93 1b 01 	sts	0x011B, r21	; 0x80011b <__brkval+0x1>
 3d8:	40 93 1a 01 	sts	0x011A, r20	; 0x80011a <__brkval>
 3dc:	81 93       	st	Z+, r24
 3de:	91 93       	st	Z+, r25
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <malloc+0x124>
 3e2:	e0 e0       	ldi	r30, 0x00	; 0
 3e4:	f0 e0       	ldi	r31, 0x00	; 0
 3e6:	cf 01       	movw	r24, r30
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	1f 91       	pop	r17
 3ee:	0f 91       	pop	r16
 3f0:	08 95       	ret

000003f2 <free>:
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	00 97       	sbiw	r24, 0x00	; 0
 3f8:	09 f4       	brne	.+2      	; 0x3fc <free+0xa>
 3fa:	81 c0       	rjmp	.+258    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 3fc:	fc 01       	movw	r30, r24
 3fe:	32 97       	sbiw	r30, 0x02	; 2
 400:	13 82       	std	Z+3, r1	; 0x03
 402:	12 82       	std	Z+2, r1	; 0x02
 404:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <__flp>
 408:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <__flp+0x1>
 40c:	10 97       	sbiw	r26, 0x00	; 0
 40e:	81 f4       	brne	.+32     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 410:	20 81       	ld	r18, Z
 412:	31 81       	ldd	r19, Z+1	; 0x01
 414:	82 0f       	add	r24, r18
 416:	93 1f       	adc	r25, r19
 418:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__brkval>
 41c:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__brkval+0x1>
 420:	28 17       	cp	r18, r24
 422:	39 07       	cpc	r19, r25
 424:	51 f5       	brne	.+84     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 426:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__brkval+0x1>
 42a:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__brkval>
 42e:	67 c0       	rjmp	.+206    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 430:	ed 01       	movw	r28, r26
 432:	20 e0       	ldi	r18, 0x00	; 0
 434:	30 e0       	ldi	r19, 0x00	; 0
 436:	ce 17       	cp	r28, r30
 438:	df 07       	cpc	r29, r31
 43a:	40 f4       	brcc	.+16     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 43c:	4a 81       	ldd	r20, Y+2	; 0x02
 43e:	5b 81       	ldd	r21, Y+3	; 0x03
 440:	9e 01       	movw	r18, r28
 442:	41 15       	cp	r20, r1
 444:	51 05       	cpc	r21, r1
 446:	f1 f0       	breq	.+60     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 448:	ea 01       	movw	r28, r20
 44a:	f5 cf       	rjmp	.-22     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 44c:	d3 83       	std	Z+3, r29	; 0x03
 44e:	c2 83       	std	Z+2, r28	; 0x02
 450:	40 81       	ld	r20, Z
 452:	51 81       	ldd	r21, Z+1	; 0x01
 454:	84 0f       	add	r24, r20
 456:	95 1f       	adc	r25, r21
 458:	c8 17       	cp	r28, r24
 45a:	d9 07       	cpc	r29, r25
 45c:	59 f4       	brne	.+22     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 45e:	88 81       	ld	r24, Y
 460:	99 81       	ldd	r25, Y+1	; 0x01
 462:	84 0f       	add	r24, r20
 464:	95 1f       	adc	r25, r21
 466:	02 96       	adiw	r24, 0x02	; 2
 468:	91 83       	std	Z+1, r25	; 0x01
 46a:	80 83       	st	Z, r24
 46c:	8a 81       	ldd	r24, Y+2	; 0x02
 46e:	9b 81       	ldd	r25, Y+3	; 0x03
 470:	93 83       	std	Z+3, r25	; 0x03
 472:	82 83       	std	Z+2, r24	; 0x02
 474:	21 15       	cp	r18, r1
 476:	31 05       	cpc	r19, r1
 478:	29 f4       	brne	.+10     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47a:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <__flp+0x1>
 47e:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <__flp>
 482:	3d c0       	rjmp	.+122    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 484:	e9 01       	movw	r28, r18
 486:	fb 83       	std	Y+3, r31	; 0x03
 488:	ea 83       	std	Y+2, r30	; 0x02
 48a:	49 91       	ld	r20, Y+
 48c:	59 91       	ld	r21, Y+
 48e:	c4 0f       	add	r28, r20
 490:	d5 1f       	adc	r29, r21
 492:	ec 17       	cp	r30, r28
 494:	fd 07       	cpc	r31, r29
 496:	61 f4       	brne	.+24     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 498:	80 81       	ld	r24, Z
 49a:	91 81       	ldd	r25, Z+1	; 0x01
 49c:	84 0f       	add	r24, r20
 49e:	95 1f       	adc	r25, r21
 4a0:	02 96       	adiw	r24, 0x02	; 2
 4a2:	e9 01       	movw	r28, r18
 4a4:	99 83       	std	Y+1, r25	; 0x01
 4a6:	88 83       	st	Y, r24
 4a8:	82 81       	ldd	r24, Z+2	; 0x02
 4aa:	93 81       	ldd	r25, Z+3	; 0x03
 4ac:	9b 83       	std	Y+3, r25	; 0x03
 4ae:	8a 83       	std	Y+2, r24	; 0x02
 4b0:	e0 e0       	ldi	r30, 0x00	; 0
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	12 96       	adiw	r26, 0x02	; 2
 4b6:	8d 91       	ld	r24, X+
 4b8:	9c 91       	ld	r25, X
 4ba:	13 97       	sbiw	r26, 0x03	; 3
 4bc:	00 97       	sbiw	r24, 0x00	; 0
 4be:	19 f0       	breq	.+6      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c0:	fd 01       	movw	r30, r26
 4c2:	dc 01       	movw	r26, r24
 4c4:	f7 cf       	rjmp	.-18     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4c6:	8d 91       	ld	r24, X+
 4c8:	9c 91       	ld	r25, X
 4ca:	11 97       	sbiw	r26, 0x01	; 1
 4cc:	9d 01       	movw	r18, r26
 4ce:	2e 5f       	subi	r18, 0xFE	; 254
 4d0:	3f 4f       	sbci	r19, 0xFF	; 255
 4d2:	82 0f       	add	r24, r18
 4d4:	93 1f       	adc	r25, r19
 4d6:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__brkval>
 4da:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__brkval+0x1>
 4de:	28 17       	cp	r18, r24
 4e0:	39 07       	cpc	r19, r25
 4e2:	69 f4       	brne	.+26     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e4:	30 97       	sbiw	r30, 0x00	; 0
 4e6:	29 f4       	brne	.+10     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e8:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__flp+0x1>
 4ec:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__flp>
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f2:	13 82       	std	Z+3, r1	; 0x03
 4f4:	12 82       	std	Z+2, r1	; 0x02
 4f6:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <__brkval+0x1>
 4fa:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <__brkval>
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	08 95       	ret

00000504 <memset>:
 504:	dc 01       	movw	r26, r24
 506:	01 c0       	rjmp	.+2      	; 0x50a <memset+0x6>
 508:	6d 93       	st	X+, r22
 50a:	41 50       	subi	r20, 0x01	; 1
 50c:	50 40       	sbci	r21, 0x00	; 0
 50e:	e0 f7       	brcc	.-8      	; 0x508 <memset+0x4>
 510:	08 95       	ret

00000512 <_exit>:
 512:	f8 94       	cli

00000514 <__stop_program>:
 514:	ff cf       	rjmp	.-2      	; 0x514 <__stop_program>
