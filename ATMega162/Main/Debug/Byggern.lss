
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000051c  000005b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000051c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800114  00800114  000005c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000999  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007f6  00000000  00000000  00001029  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003db  00000000  00000000  0000181f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001bfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040b  00000000  00000000  00001c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ec  00000000  00000000  0000209b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002187  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e1       	ldi	r30, 0x1C	; 28
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 31       	cpi	r26, 0x14	; 20
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 e1       	ldi	r26, 0x14	; 20
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ae 31       	cpi	r26, 0x1E	; 30
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 8c 02 	jmp	0x518	; 0x518 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "util/delay.h"
#include "uart.h"
#include <stdio.h>

int main(void) {
	uart_init(9600);
  ae:	80 e8       	ldi	r24, 0x80	; 128
  b0:	95 e2       	ldi	r25, 0x25	; 37
  b2:	0e 94 6f 00 	call	0xde	; 0xde <uart_init>
	fdevopen(&uart_transmit, &uart_receive);
  b6:	67 e8       	ldi	r22, 0x87	; 135
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	81 e8       	ldi	r24, 0x81	; 129
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 cd 00 	call	0x19a	; 0x19a <fdevopen>
	
    while (1) {
		printf("Hello world!\r\n");
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	0e 94 18 01 	call	0x230	; 0x230 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	8f e7       	ldi	r24, 0x7F	; 127
  ce:	97 e0       	ldi	r25, 0x07	; 7
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x22>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x2c>
  da:	00 00       	nop
  dc:	f2 cf       	rjmp	.-28     	; 0xc2 <main+0x14>

000000de <uart_init>:
#include <avr/io.h>

#define FOSC 4915200

void uart_init(unsigned int baud_rate) {
	unsigned int ubrr = FOSC/16/baud_rate - 1;
  de:	9c 01       	movw	r18, r24
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	50 e0       	ldi	r21, 0x00	; 0
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	70 eb       	ldi	r23, 0xB0	; 176
  e8:	84 e0       	ldi	r24, 0x04	; 4
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 8c 00 	call	0x118	; 0x118 <__divmodsi4>
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	31 09       	sbc	r19, r1
	UBRR0H = (unsigned char) (ubrr >> 8);
  f4:	30 bd       	out	0x20, r19	; 32
	UBRR0L = (unsigned char) ubrr;
  f6:	29 b9       	out	0x09, r18	; 9
	// Enable receiver and transmitter
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  f8:	88 e1       	ldi	r24, 0x18	; 24
  fa:	8a b9       	out	0x0a, r24	; 10
	// Set frame format: 8 data, 2 stop bit
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
  fc:	8e e8       	ldi	r24, 0x8E	; 142
  fe:	80 bd       	out	0x20, r24	; 32
 100:	08 95       	ret

00000102 <uart_transmit>:
}

int uart_transmit(char data, FILE* file) {
	// Wait for empty transmit buffer
	while( !( UCSR0A & (1 << UDRE0)) );
 102:	5d 9b       	sbis	0x0b, 5	; 11
 104:	fe cf       	rjmp	.-4      	; 0x102 <uart_transmit>
	// Put data into buffer, sends the data
	UDR0 = data;
 106:	8c b9       	out	0x0c, r24	; 12
	
	return 0;
}
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	08 95       	ret

0000010e <uart_receive>:

int uart_receive(FILE* file) {
	// Wait for data to be received
	while( !(UCSR0A & (1 << RXC0)) );
 10e:	5f 9b       	sbis	0x0b, 7	; 11
 110:	fe cf       	rjmp	.-4      	; 0x10e <uart_receive>
	// Get and return received data from buffer
	return UDR0;
 112:	8c b1       	in	r24, 0x0c	; 12
}
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	08 95       	ret

00000118 <__divmodsi4>:
 118:	05 2e       	mov	r0, r21
 11a:	97 fb       	bst	r25, 7
 11c:	1e f4       	brtc	.+6      	; 0x124 <__divmodsi4+0xc>
 11e:	00 94       	com	r0
 120:	0e 94 a3 00 	call	0x146	; 0x146 <__negsi2>
 124:	57 fd       	sbrc	r21, 7
 126:	07 d0       	rcall	.+14     	; 0x136 <__divmodsi4_neg2>
 128:	0e 94 ab 00 	call	0x156	; 0x156 <__udivmodsi4>
 12c:	07 fc       	sbrc	r0, 7
 12e:	03 d0       	rcall	.+6      	; 0x136 <__divmodsi4_neg2>
 130:	4e f4       	brtc	.+18     	; 0x144 <__divmodsi4_exit>
 132:	0c 94 a3 00 	jmp	0x146	; 0x146 <__negsi2>

00000136 <__divmodsi4_neg2>:
 136:	50 95       	com	r21
 138:	40 95       	com	r20
 13a:	30 95       	com	r19
 13c:	21 95       	neg	r18
 13e:	3f 4f       	sbci	r19, 0xFF	; 255
 140:	4f 4f       	sbci	r20, 0xFF	; 255
 142:	5f 4f       	sbci	r21, 0xFF	; 255

00000144 <__divmodsi4_exit>:
 144:	08 95       	ret

00000146 <__negsi2>:
 146:	90 95       	com	r25
 148:	80 95       	com	r24
 14a:	70 95       	com	r23
 14c:	61 95       	neg	r22
 14e:	7f 4f       	sbci	r23, 0xFF	; 255
 150:	8f 4f       	sbci	r24, 0xFF	; 255
 152:	9f 4f       	sbci	r25, 0xFF	; 255
 154:	08 95       	ret

00000156 <__udivmodsi4>:
 156:	a1 e2       	ldi	r26, 0x21	; 33
 158:	1a 2e       	mov	r1, r26
 15a:	aa 1b       	sub	r26, r26
 15c:	bb 1b       	sub	r27, r27
 15e:	fd 01       	movw	r30, r26
 160:	0d c0       	rjmp	.+26     	; 0x17c <__udivmodsi4_ep>

00000162 <__udivmodsi4_loop>:
 162:	aa 1f       	adc	r26, r26
 164:	bb 1f       	adc	r27, r27
 166:	ee 1f       	adc	r30, r30
 168:	ff 1f       	adc	r31, r31
 16a:	a2 17       	cp	r26, r18
 16c:	b3 07       	cpc	r27, r19
 16e:	e4 07       	cpc	r30, r20
 170:	f5 07       	cpc	r31, r21
 172:	20 f0       	brcs	.+8      	; 0x17c <__udivmodsi4_ep>
 174:	a2 1b       	sub	r26, r18
 176:	b3 0b       	sbc	r27, r19
 178:	e4 0b       	sbc	r30, r20
 17a:	f5 0b       	sbc	r31, r21

0000017c <__udivmodsi4_ep>:
 17c:	66 1f       	adc	r22, r22
 17e:	77 1f       	adc	r23, r23
 180:	88 1f       	adc	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	1a 94       	dec	r1
 186:	69 f7       	brne	.-38     	; 0x162 <__udivmodsi4_loop>
 188:	60 95       	com	r22
 18a:	70 95       	com	r23
 18c:	80 95       	com	r24
 18e:	90 95       	com	r25
 190:	9b 01       	movw	r18, r22
 192:	ac 01       	movw	r20, r24
 194:	bd 01       	movw	r22, r26
 196:	cf 01       	movw	r24, r30
 198:	08 95       	ret

0000019a <fdevopen>:
 19a:	0f 93       	push	r16
 19c:	1f 93       	push	r17
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	00 97       	sbiw	r24, 0x00	; 0
 1a4:	31 f4       	brne	.+12     	; 0x1b2 <fdevopen+0x18>
 1a6:	61 15       	cp	r22, r1
 1a8:	71 05       	cpc	r23, r1
 1aa:	19 f4       	brne	.+6      	; 0x1b2 <fdevopen+0x18>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	3a c0       	rjmp	.+116    	; 0x226 <fdevopen+0x8c>
 1b2:	8b 01       	movw	r16, r22
 1b4:	ec 01       	movw	r28, r24
 1b6:	6e e0       	ldi	r22, 0x0E	; 14
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	0e 94 48 01 	call	0x290	; 0x290 <calloc>
 1c2:	fc 01       	movw	r30, r24
 1c4:	89 2b       	or	r24, r25
 1c6:	91 f3       	breq	.-28     	; 0x1ac <fdevopen+0x12>
 1c8:	80 e8       	ldi	r24, 0x80	; 128
 1ca:	83 83       	std	Z+3, r24	; 0x03
 1cc:	01 15       	cp	r16, r1
 1ce:	11 05       	cpc	r17, r1
 1d0:	71 f0       	breq	.+28     	; 0x1ee <fdevopen+0x54>
 1d2:	13 87       	std	Z+11, r17	; 0x0b
 1d4:	02 87       	std	Z+10, r16	; 0x0a
 1d6:	81 e8       	ldi	r24, 0x81	; 129
 1d8:	83 83       	std	Z+3, r24	; 0x03
 1da:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 1de:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 1e2:	89 2b       	or	r24, r25
 1e4:	21 f4       	brne	.+8      	; 0x1ee <fdevopen+0x54>
 1e6:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x1>
 1ea:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end>
 1ee:	20 97       	sbiw	r28, 0x00	; 0
 1f0:	c9 f0       	breq	.+50     	; 0x224 <fdevopen+0x8a>
 1f2:	d1 87       	std	Z+9, r29	; 0x09
 1f4:	c0 87       	std	Z+8, r28	; 0x08
 1f6:	83 81       	ldd	r24, Z+3	; 0x03
 1f8:	82 60       	ori	r24, 0x02	; 2
 1fa:	83 83       	std	Z+3, r24	; 0x03
 1fc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x2>
 200:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x3>
 204:	89 2b       	or	r24, r25
 206:	71 f4       	brne	.+28     	; 0x224 <fdevopen+0x8a>
 208:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__data_end+0x3>
 20c:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__data_end+0x2>
 210:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end+0x4>
 214:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x5>
 218:	89 2b       	or	r24, r25
 21a:	21 f4       	brne	.+8      	; 0x224 <fdevopen+0x8a>
 21c:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__data_end+0x5>
 220:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__data_end+0x4>
 224:	cf 01       	movw	r24, r30
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	1f 91       	pop	r17
 22c:	0f 91       	pop	r16
 22e:	08 95       	ret

00000230 <puts>:
 230:	0f 93       	push	r16
 232:	1f 93       	push	r17
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__data_end+0x2>
 23c:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__data_end+0x3>
 240:	23 81       	ldd	r18, Z+3	; 0x03
 242:	21 ff       	sbrs	r18, 1
 244:	1b c0       	rjmp	.+54     	; 0x27c <puts+0x4c>
 246:	8c 01       	movw	r16, r24
 248:	d0 e0       	ldi	r29, 0x00	; 0
 24a:	c0 e0       	ldi	r28, 0x00	; 0
 24c:	f8 01       	movw	r30, r16
 24e:	81 91       	ld	r24, Z+
 250:	8f 01       	movw	r16, r30
 252:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end+0x2>
 256:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <__data_end+0x3>
 25a:	db 01       	movw	r26, r22
 25c:	18 96       	adiw	r26, 0x08	; 8
 25e:	ed 91       	ld	r30, X+
 260:	fc 91       	ld	r31, X
 262:	19 97       	sbiw	r26, 0x09	; 9
 264:	88 23       	and	r24, r24
 266:	31 f0       	breq	.+12     	; 0x274 <puts+0x44>
 268:	09 95       	icall
 26a:	89 2b       	or	r24, r25
 26c:	79 f3       	breq	.-34     	; 0x24c <puts+0x1c>
 26e:	df ef       	ldi	r29, 0xFF	; 255
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	ec cf       	rjmp	.-40     	; 0x24c <puts+0x1c>
 274:	8a e0       	ldi	r24, 0x0A	; 10
 276:	09 95       	icall
 278:	89 2b       	or	r24, r25
 27a:	19 f0       	breq	.+6      	; 0x282 <puts+0x52>
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	9f ef       	ldi	r25, 0xFF	; 255
 280:	02 c0       	rjmp	.+4      	; 0x286 <puts+0x56>
 282:	8d 2f       	mov	r24, r29
 284:	9c 2f       	mov	r25, r28
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	08 95       	ret

00000290 <calloc>:
 290:	0f 93       	push	r16
 292:	1f 93       	push	r17
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	86 9f       	mul	r24, r22
 29a:	80 01       	movw	r16, r0
 29c:	87 9f       	mul	r24, r23
 29e:	10 0d       	add	r17, r0
 2a0:	96 9f       	mul	r25, r22
 2a2:	10 0d       	add	r17, r0
 2a4:	11 24       	eor	r1, r1
 2a6:	c8 01       	movw	r24, r16
 2a8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <malloc>
 2ac:	ec 01       	movw	r28, r24
 2ae:	00 97       	sbiw	r24, 0x00	; 0
 2b0:	29 f0       	breq	.+10     	; 0x2bc <calloc+0x2c>
 2b2:	a8 01       	movw	r20, r16
 2b4:	60 e0       	ldi	r22, 0x00	; 0
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	0e 94 85 02 	call	0x50a	; 0x50a <memset>
 2bc:	ce 01       	movw	r24, r28
 2be:	df 91       	pop	r29
 2c0:	cf 91       	pop	r28
 2c2:	1f 91       	pop	r17
 2c4:	0f 91       	pop	r16
 2c6:	08 95       	ret

000002c8 <malloc>:
 2c8:	0f 93       	push	r16
 2ca:	1f 93       	push	r17
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
 2d0:	82 30       	cpi	r24, 0x02	; 2
 2d2:	91 05       	cpc	r25, r1
 2d4:	10 f4       	brcc	.+4      	; 0x2da <malloc+0x12>
 2d6:	82 e0       	ldi	r24, 0x02	; 2
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <__flp>
 2de:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <__flp+0x1>
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	a0 e0       	ldi	r26, 0x00	; 0
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	30 97       	sbiw	r30, 0x00	; 0
 2ec:	19 f1       	breq	.+70     	; 0x334 <malloc+0x6c>
 2ee:	40 81       	ld	r20, Z
 2f0:	51 81       	ldd	r21, Z+1	; 0x01
 2f2:	02 81       	ldd	r16, Z+2	; 0x02
 2f4:	13 81       	ldd	r17, Z+3	; 0x03
 2f6:	48 17       	cp	r20, r24
 2f8:	59 07       	cpc	r21, r25
 2fa:	c8 f0       	brcs	.+50     	; 0x32e <malloc+0x66>
 2fc:	84 17       	cp	r24, r20
 2fe:	95 07       	cpc	r25, r21
 300:	69 f4       	brne	.+26     	; 0x31c <malloc+0x54>
 302:	10 97       	sbiw	r26, 0x00	; 0
 304:	31 f0       	breq	.+12     	; 0x312 <malloc+0x4a>
 306:	12 96       	adiw	r26, 0x02	; 2
 308:	0c 93       	st	X, r16
 30a:	12 97       	sbiw	r26, 0x02	; 2
 30c:	13 96       	adiw	r26, 0x03	; 3
 30e:	1c 93       	st	X, r17
 310:	27 c0       	rjmp	.+78     	; 0x360 <malloc+0x98>
 312:	00 93 1c 01 	sts	0x011C, r16	; 0x80011c <__flp>
 316:	10 93 1d 01 	sts	0x011D, r17	; 0x80011d <__flp+0x1>
 31a:	22 c0       	rjmp	.+68     	; 0x360 <malloc+0x98>
 31c:	21 15       	cp	r18, r1
 31e:	31 05       	cpc	r19, r1
 320:	19 f0       	breq	.+6      	; 0x328 <malloc+0x60>
 322:	42 17       	cp	r20, r18
 324:	53 07       	cpc	r21, r19
 326:	18 f4       	brcc	.+6      	; 0x32e <malloc+0x66>
 328:	9a 01       	movw	r18, r20
 32a:	bd 01       	movw	r22, r26
 32c:	ef 01       	movw	r28, r30
 32e:	df 01       	movw	r26, r30
 330:	f8 01       	movw	r30, r16
 332:	db cf       	rjmp	.-74     	; 0x2ea <malloc+0x22>
 334:	21 15       	cp	r18, r1
 336:	31 05       	cpc	r19, r1
 338:	f9 f0       	breq	.+62     	; 0x378 <malloc+0xb0>
 33a:	28 1b       	sub	r18, r24
 33c:	39 0b       	sbc	r19, r25
 33e:	24 30       	cpi	r18, 0x04	; 4
 340:	31 05       	cpc	r19, r1
 342:	80 f4       	brcc	.+32     	; 0x364 <malloc+0x9c>
 344:	8a 81       	ldd	r24, Y+2	; 0x02
 346:	9b 81       	ldd	r25, Y+3	; 0x03
 348:	61 15       	cp	r22, r1
 34a:	71 05       	cpc	r23, r1
 34c:	21 f0       	breq	.+8      	; 0x356 <malloc+0x8e>
 34e:	fb 01       	movw	r30, r22
 350:	93 83       	std	Z+3, r25	; 0x03
 352:	82 83       	std	Z+2, r24	; 0x02
 354:	04 c0       	rjmp	.+8      	; 0x35e <malloc+0x96>
 356:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__flp+0x1>
 35a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__flp>
 35e:	fe 01       	movw	r30, r28
 360:	32 96       	adiw	r30, 0x02	; 2
 362:	44 c0       	rjmp	.+136    	; 0x3ec <malloc+0x124>
 364:	fe 01       	movw	r30, r28
 366:	e2 0f       	add	r30, r18
 368:	f3 1f       	adc	r31, r19
 36a:	81 93       	st	Z+, r24
 36c:	91 93       	st	Z+, r25
 36e:	22 50       	subi	r18, 0x02	; 2
 370:	31 09       	sbc	r19, r1
 372:	39 83       	std	Y+1, r19	; 0x01
 374:	28 83       	st	Y, r18
 376:	3a c0       	rjmp	.+116    	; 0x3ec <malloc+0x124>
 378:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__brkval>
 37c:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__brkval+0x1>
 380:	23 2b       	or	r18, r19
 382:	41 f4       	brne	.+16     	; 0x394 <malloc+0xcc>
 384:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 388:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 38c:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <__brkval+0x1>
 390:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__brkval>
 394:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 398:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 39c:	21 15       	cp	r18, r1
 39e:	31 05       	cpc	r19, r1
 3a0:	41 f4       	brne	.+16     	; 0x3b2 <malloc+0xea>
 3a2:	2d b7       	in	r18, 0x3d	; 61
 3a4:	3e b7       	in	r19, 0x3e	; 62
 3a6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 3aa:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 3ae:	24 1b       	sub	r18, r20
 3b0:	35 0b       	sbc	r19, r21
 3b2:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__brkval>
 3b6:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__brkval+0x1>
 3ba:	e2 17       	cp	r30, r18
 3bc:	f3 07       	cpc	r31, r19
 3be:	a0 f4       	brcc	.+40     	; 0x3e8 <malloc+0x120>
 3c0:	2e 1b       	sub	r18, r30
 3c2:	3f 0b       	sbc	r19, r31
 3c4:	28 17       	cp	r18, r24
 3c6:	39 07       	cpc	r19, r25
 3c8:	78 f0       	brcs	.+30     	; 0x3e8 <malloc+0x120>
 3ca:	ac 01       	movw	r20, r24
 3cc:	4e 5f       	subi	r20, 0xFE	; 254
 3ce:	5f 4f       	sbci	r21, 0xFF	; 255
 3d0:	24 17       	cp	r18, r20
 3d2:	35 07       	cpc	r19, r21
 3d4:	48 f0       	brcs	.+18     	; 0x3e8 <malloc+0x120>
 3d6:	4e 0f       	add	r20, r30
 3d8:	5f 1f       	adc	r21, r31
 3da:	50 93 1b 01 	sts	0x011B, r21	; 0x80011b <__brkval+0x1>
 3de:	40 93 1a 01 	sts	0x011A, r20	; 0x80011a <__brkval>
 3e2:	81 93       	st	Z+, r24
 3e4:	91 93       	st	Z+, r25
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <malloc+0x124>
 3e8:	e0 e0       	ldi	r30, 0x00	; 0
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	cf 01       	movw	r24, r30
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
 3f2:	1f 91       	pop	r17
 3f4:	0f 91       	pop	r16
 3f6:	08 95       	ret

000003f8 <free>:
 3f8:	cf 93       	push	r28
 3fa:	df 93       	push	r29
 3fc:	00 97       	sbiw	r24, 0x00	; 0
 3fe:	09 f4       	brne	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 400:	81 c0       	rjmp	.+258    	; 0x504 <__stack+0x5>
 402:	fc 01       	movw	r30, r24
 404:	32 97       	sbiw	r30, 0x02	; 2
 406:	13 82       	std	Z+3, r1	; 0x03
 408:	12 82       	std	Z+2, r1	; 0x02
 40a:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <__flp>
 40e:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <__flp+0x1>
 412:	10 97       	sbiw	r26, 0x00	; 0
 414:	81 f4       	brne	.+32     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 416:	20 81       	ld	r18, Z
 418:	31 81       	ldd	r19, Z+1	; 0x01
 41a:	82 0f       	add	r24, r18
 41c:	93 1f       	adc	r25, r19
 41e:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__brkval>
 422:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__brkval+0x1>
 426:	28 17       	cp	r18, r24
 428:	39 07       	cpc	r19, r25
 42a:	51 f5       	brne	.+84     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 42c:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__brkval+0x1>
 430:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__brkval>
 434:	67 c0       	rjmp	.+206    	; 0x504 <__stack+0x5>
 436:	ed 01       	movw	r28, r26
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	ce 17       	cp	r28, r30
 43e:	df 07       	cpc	r29, r31
 440:	40 f4       	brcc	.+16     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 442:	4a 81       	ldd	r20, Y+2	; 0x02
 444:	5b 81       	ldd	r21, Y+3	; 0x03
 446:	9e 01       	movw	r18, r28
 448:	41 15       	cp	r20, r1
 44a:	51 05       	cpc	r21, r1
 44c:	f1 f0       	breq	.+60     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 44e:	ea 01       	movw	r28, r20
 450:	f5 cf       	rjmp	.-22     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 452:	d3 83       	std	Z+3, r29	; 0x03
 454:	c2 83       	std	Z+2, r28	; 0x02
 456:	40 81       	ld	r20, Z
 458:	51 81       	ldd	r21, Z+1	; 0x01
 45a:	84 0f       	add	r24, r20
 45c:	95 1f       	adc	r25, r21
 45e:	c8 17       	cp	r28, r24
 460:	d9 07       	cpc	r29, r25
 462:	59 f4       	brne	.+22     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 464:	88 81       	ld	r24, Y
 466:	99 81       	ldd	r25, Y+1	; 0x01
 468:	84 0f       	add	r24, r20
 46a:	95 1f       	adc	r25, r21
 46c:	02 96       	adiw	r24, 0x02	; 2
 46e:	91 83       	std	Z+1, r25	; 0x01
 470:	80 83       	st	Z, r24
 472:	8a 81       	ldd	r24, Y+2	; 0x02
 474:	9b 81       	ldd	r25, Y+3	; 0x03
 476:	93 83       	std	Z+3, r25	; 0x03
 478:	82 83       	std	Z+2, r24	; 0x02
 47a:	21 15       	cp	r18, r1
 47c:	31 05       	cpc	r19, r1
 47e:	29 f4       	brne	.+10     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 480:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <__flp+0x1>
 484:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <__flp>
 488:	3d c0       	rjmp	.+122    	; 0x504 <__stack+0x5>
 48a:	e9 01       	movw	r28, r18
 48c:	fb 83       	std	Y+3, r31	; 0x03
 48e:	ea 83       	std	Y+2, r30	; 0x02
 490:	49 91       	ld	r20, Y+
 492:	59 91       	ld	r21, Y+
 494:	c4 0f       	add	r28, r20
 496:	d5 1f       	adc	r29, r21
 498:	ec 17       	cp	r30, r28
 49a:	fd 07       	cpc	r31, r29
 49c:	61 f4       	brne	.+24     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 49e:	80 81       	ld	r24, Z
 4a0:	91 81       	ldd	r25, Z+1	; 0x01
 4a2:	84 0f       	add	r24, r20
 4a4:	95 1f       	adc	r25, r21
 4a6:	02 96       	adiw	r24, 0x02	; 2
 4a8:	e9 01       	movw	r28, r18
 4aa:	99 83       	std	Y+1, r25	; 0x01
 4ac:	88 83       	st	Y, r24
 4ae:	82 81       	ldd	r24, Z+2	; 0x02
 4b0:	93 81       	ldd	r25, Z+3	; 0x03
 4b2:	9b 83       	std	Y+3, r25	; 0x03
 4b4:	8a 83       	std	Y+2, r24	; 0x02
 4b6:	e0 e0       	ldi	r30, 0x00	; 0
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	12 96       	adiw	r26, 0x02	; 2
 4bc:	8d 91       	ld	r24, X+
 4be:	9c 91       	ld	r25, X
 4c0:	13 97       	sbiw	r26, 0x03	; 3
 4c2:	00 97       	sbiw	r24, 0x00	; 0
 4c4:	19 f0       	breq	.+6      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c6:	fd 01       	movw	r30, r26
 4c8:	dc 01       	movw	r26, r24
 4ca:	f7 cf       	rjmp	.-18     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4cc:	8d 91       	ld	r24, X+
 4ce:	9c 91       	ld	r25, X
 4d0:	11 97       	sbiw	r26, 0x01	; 1
 4d2:	9d 01       	movw	r18, r26
 4d4:	2e 5f       	subi	r18, 0xFE	; 254
 4d6:	3f 4f       	sbci	r19, 0xFF	; 255
 4d8:	82 0f       	add	r24, r18
 4da:	93 1f       	adc	r25, r19
 4dc:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__brkval>
 4e0:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__brkval+0x1>
 4e4:	28 17       	cp	r18, r24
 4e6:	39 07       	cpc	r19, r25
 4e8:	69 f4       	brne	.+26     	; 0x504 <__stack+0x5>
 4ea:	30 97       	sbiw	r30, 0x00	; 0
 4ec:	29 f4       	brne	.+10     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ee:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__flp+0x1>
 4f2:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__flp>
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f8:	13 82       	std	Z+3, r1	; 0x03
 4fa:	12 82       	std	Z+2, r1	; 0x02
 4fc:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <__brkval+0x1>
 500:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <__brkval>
 504:	df 91       	pop	r29
 506:	cf 91       	pop	r28
 508:	08 95       	ret

0000050a <memset>:
 50a:	dc 01       	movw	r26, r24
 50c:	01 c0       	rjmp	.+2      	; 0x510 <memset+0x6>
 50e:	6d 93       	st	X+, r22
 510:	41 50       	subi	r20, 0x01	; 1
 512:	50 40       	sbci	r21, 0x00	; 0
 514:	e0 f7       	brcc	.-8      	; 0x50e <memset+0x4>
 516:	08 95       	ret

00000518 <_exit>:
 518:	f8 94       	cli

0000051a <__stop_program>:
 51a:	ff cf       	rjmp	.-2      	; 0x51a <__stop_program>
